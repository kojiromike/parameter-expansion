name: Release

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  semantic-version:
    name: Semantic Version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Set Up Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git fetch --tags

    - name: Install Package
      run: python -m pip install build

    - name: Check Version
      run: |
        desc=$(git describe)
        head=$(git show-ref --hash --head HEAD)
        version=$(python -m setup --version)
        case "$version" in
          0.0.0*)
            echo 'Failed to get version' >&2
            false
            ;;
          "$desc")
            echo 'Already on latest version' >&2
            false
            ;;
        esac
        IFS=. read -r major minor patch _ <<< "$version"
        bump="$major.$minor.$patch"  # setuptools-scm increments the patch
        set -x
        gh release create --target "$head" "$bump"
        git fetch --tags origin
        git tag -fm "$bump" "$bump"  # retag with annotated tag
        git push --tags --force origin "$bump"
        python -m build .
        find dist
        # test the package versions are fixed outside of git
        sdist_version=$(tar -O -xf "dist/parameter-expansion-$bump.tar.gz" "parameter-expansion-$bump/src/parameter_expansion.egg-info/PKG-INFO" | awk '/^Version:/{print $2}')
        wheel_version=$(unzip -p "dist/parameter_expansion-$bump.whl" "parameter_expansion-${bump}.dist-info/METADATA" | awk '/^Version:/{print $2}')
        if [[ $bump != $sdist_version ]]; then
          echo "Expected new version $bump, but sdist has version $sdist_version." >&2
          false
        fi
        if [[ $bump != $wheel_version ]]; then
          echo "Expected new version $bump, but wheel has version $wheel_version." >&2
          false
        fi
        gh release upload "$bump" dist/*
